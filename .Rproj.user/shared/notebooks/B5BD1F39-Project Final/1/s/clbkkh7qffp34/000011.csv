"0","#all TXT files in the specified directory"
"0","txt_files <- list.files(path = data_directory, full.names = TRUE)"
"0",""
"0","print(txt_files)"
"1"," [1]"
"1"," ""./data/NB_FER/2018_S1_NB_FER.txt"" "
"1"," ""./data/NB_FER/2018_S2_NB_Fer.txt"" "
"1"," ""./data/NB_FER/2019_S1_NB_FER.txt"" "
"1","
"
"1"," [4]"
"1"," ""./data/NB_FER/2019_S2_NB_FER.txt"" "
"1"," ""./data/NB_FER/2020_S1_NB_FER.txt"" "
"1"," ""./data/NB_FER/2020_S2_NB_FER.txt"" "
"1","
"
"1"," [7]"
"1"," ""./data/NB_FER/2021_S1_NB_FER.txt"" "
"1"," ""./data/NB_FER/2021_S2_NB_FER.txt"" "
"1"," ""./data/NB_FER/2022_S1_NB_FER.txt"" "
"1","
"
"1","[10]"
"1"," ""./data/NB_FER/2022_S2_NB_FER.txt"" "
"1"," ""./data/NB_FER/2023_S1_NB_FER .txt"""
"1"," ""./data/NB_FER/2023_S2_NB_FER.txt"" "
"1","
"
"0","# Directory where the PROFIL_FER .txt files are located"
"0","data_directory <- ""./data/PROFIL_FER"""
"0",""
"0","# Get a list of all .txt files in the specified directory"
"0","txt_files <- list.files(path = data_directory, full.names = TRUE)"
"0",""
"0","print(txt_files) "
"1"," [1]"
"1"," ""./data/PROFIL_FER/2018_S1_PROFIL_FER.txt"""
"1"," ""./data/PROFIL_FER/2018_S2_Profil_Fer.txt"""
"1","
"
"1"," [3]"
"1"," ""./data/PROFIL_FER/2019_S1_PROFIL_FER.txt"""
"1"," ""./data/PROFIL_FER/2019_S2_PROFIL_FER.txt"""
"1","
"
"1"," [5]"
"1"," ""./data/PROFIL_FER/2020_S1_PROFIL_FER.txt"""
"1"," ""./data/PROFIL_FER/2020_S2_PROFIL_FER.txt"""
"1","
"
"1"," [7]"
"1"," ""./data/PROFIL_FER/2021_S1_PROFIL_FER.txt"""
"1"," ""./data/PROFIL_FER/2021_S2_PROFIL_FER.txt"""
"1","
"
"1"," [9]"
"1"," ""./data/PROFIL_FER/2022_S1_PROFIL_FER.txt"""
"1"," ""./data/PROFIL_FER/2022_S2_PROFIL_FER.txt"""
"1","
"
"1","[11]"
"1"," ""./data/PROFIL_FER/2023_S1_PROFIL_FER.txt"""
"1"," ""./data/PROFIL_FER/2023_S2_PROFIL_FER.txt"""
"1","
"
"0","# Specify the expected column structure for PROFIL_FER files"
"0","expected_columns <- c("
"0","  ""CODE_STIF_TRNS"","
"0","  ""CODE_STIF_RES"","
"0","  ""CODE_STIF_ARRET"","
"0","  ""LIBELLE_ARRET"","
"0","  ""ID_ZDC"","
"0","  ""CAT_JOUR"","
"0","  ""TRNC_HORR_60"","
"0","  ""pourc_validations"""
"0",")"
"0",""
"0","# Create an empty data frame with the expected columns"
"0","merged_data1 <- data.frame(matrix(ncol = length(expected_columns), nrow = 0))"
"0","colnames(merged_data1) <- expected_columns"
"0",""
"0","# Loop through each TXT file and merge it into the main dataset"
"0","for (txt_file in txt_files) {"
"0","  # Read the first few lines to determine the separator"
"0","  first_lines <- readLines(txt_file, n = 5)"
"0","  possible_separators <- c(""\t"", "";"")  "
"0","  "
"0","  # Variable to control whether to continue to the next separator"
"0","  continue_next_separator <- TRUE"
"0","  "
"0","  # Try each possible separator"
"0","  for (separator in possible_separators) {"
"0","    if (!continue_next_separator) {"
"0","      break"
"0","    }"
"0","    "
"0","    tryCatch("
"0","      {"
"0","        # Load the data"
"0","        year_data <- read.delim(txt_file, header = TRUE, sep = separator, stringsAsFactors = FALSE)"
"0","        "
"0","        # Align column names to the expected structure"
"0","        missing_cols <- setdiff(expected_columns, names(year_data))"
"0","        if (length(missing_cols) > 0) {"
"0","          year_data[missing_cols] <- NA  # Add missing columns as NA"
"0","        }"
"0","        "
"0","        year_data <- year_data[expected_columns]  # Reorder columns"
"0","        "
"0","        # Merge into the main dataset"
"0","        merged_data1 <- bind_rows(merged_data1, year_data)"
"0","        "
"0","        # Set the variable to false to break out of the loop"
"0","        continue_next_separator <- FALSE"
"0","      },"
"0","      error = function(e) {"
"0","        # Continue to the next separator if an error occurs"
"0","        continue_next_separator <- TRUE"
"0","      }"
"0","    )"
"0","  }"
"0","}"
"0",""
"0","# Save the merged data to a CSV file"
"0","write.csv(merged_data1, ""merged_PROFIL_FER.csv"", row.names = FALSE)"
"0","merged_PROFIL_FER <- read.csv(""merged_PROFIL_FER.csv"",encoding = ""latin1"")"
"0","merged_PROFIL_FER <- subset(merged_PROFIL_FER, select = -ID_ZDC)"
"0",""
"0",""
"0","merged_PROFIL_FER <- merged_PROFIL_FER[!apply(is.na(merged_PROFIL_FER), 1, all), ]"
"0",""
"0","merged_PROFIL_FER"
